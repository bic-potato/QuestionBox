@page "/Answer/{id}"
@using Microsoft.EntityFrameworkCore;
@using QuestionBox.Data;
@using System.ComponentModel.DataAnnotations;
@inject NavigationManager NavigationManager
@inject IDbContextFactory<ApplicationDbContext> DbFactory




<div class="rounded-2xl border-2 border-slate-300 space-y-16 h-48 mx-auto mt-20 p-4">
    @questions.Questions

</div>

<EditForm Model="model" OnValidSubmit="@OnPostAsync" class="flex flex-col mt-20 mx-auto space-y-16">
    <DataAnnotationsValidator/>
    <div class="w-100">
    <ValidationSummary />
        @if (isSuccess)
        {
            <div class="alert alert-success" role="alert">回答成功</div>
        }
        <InputTextArea class="rounded-2xl border-2 border-slate-300 w-100 h-48 p-4" @bind-Value="model.question"></InputTextArea>
    </div>
    <button class="rounded-xl w-1/3 btn-primary mx-auto h-16" type="submit">完成回答</button>
</EditForm>



@code {
    public class EditModels
    {
        [Required(ErrorMessage = "回答不能为空")]
        public string question { get; set; }
    }

    public EditModels? model;
    public bool isSuccess = false;

    QuestionModel questions;
    [Parameter]
    public string id { get; set; }
    public async Task<QuestionModel> GetQuestionListAsync()
    {
        using var _context = await DbFactory.CreateDbContextAsync();
        return await _context.DataModel.FindAsync(Guid.Parse(id));
    }
    protected override async Task OnInitializedAsync()
    {
        model = new EditModels();
        questions = await GetQuestionListAsync();
        await base.OnInitializedAsync();
    }
    public async Task OnPostAsync()
    {

        using var context = await DbFactory.CreateDbContextAsync();

        questions.Answers = model.question;

        context.DataModel.Entry(questions).State = EntityState.Modified;
        try
        {
            await context.SaveChangesAsync();
        }
        catch (DbUpdateException)
        {
            throw;
        }
        model = new EditModels();

        isSuccess = true;
        Thread.Sleep(2000);
        NavigationManager.NavigateTo("/");
    }
}
